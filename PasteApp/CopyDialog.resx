<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>